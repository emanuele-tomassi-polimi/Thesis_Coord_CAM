function G_adj = G_adj_fun(G1_1,G1_2,G1_3,G2_1,G2_2,G2_3,G3_1,G3_2,G3_3)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% PROTOTYPE:
%   G_adj = G_adj_fun(G1_1,G1_2,G1_3,G2_1,G2_2,G2_3,G3_1,G3_2,G3_3)
%--------------------------------------------------------------------------
% DESCRIPTION: 
%   Function used to compute the adjoint matrix for the generic square
%   matrix G (3x3)
%--------------------------------------------------------------------------
% INPUT: For more information look at the thesis
%   G1_1[1]        Value G(1,1) 
%   G1_2[1]        Value G(1,2)  
%   G1_3[1]        Value G(1,3)  
%   G2_1[1]        Value G(2,1)  
%   G2_2[1]        Value G(2,2)  
%   G2_3[1]        Value G(2,3)  
%   G3_1[1]        Value G(3,1)  
%   G3_2[1]        Value G(3,2)  
%   G3_3[1]        Value G(3,3)  
%--------------------------------------------------------------------------
% OUTPUT:
%   G_adj[3x3]     Adjoint matrix
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

G_adj = reshape([G2_2.*G3_3-G2_3.*G3_2,-G2_1.*G3_3+G2_3.*G3_1,G2_1.*G3_2-G2_2.*G3_1,-G1_2.*G3_3+G1_3.*G3_2,G1_1.*G3_3-G1_3.*G3_1,-G1_1.*G3_2+G1_2.*G3_1,G1_2.*G2_3-G1_3.*G2_2,-G1_1.*G2_3+G1_3.*G2_1,G1_1.*G2_2-G1_2.*G2_1],[3,3]);

end
